/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/service_subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.service_subscriptions.id"];
          created_at?: parameters["rowFilter.service_subscriptions.created_at"];
          updated_at?: parameters["rowFilter.service_subscriptions.updated_at"];
          service_name?: parameters["rowFilter.service_subscriptions.service_name"];
          billing_period?: parameters["rowFilter.service_subscriptions.billing_period"];
          price?: parameters["rowFilter.service_subscriptions.price"];
          subscription_plan?: parameters["rowFilter.service_subscriptions.subscription_plan"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["service_subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** service_subscriptions */
          service_subscriptions?: definitions["service_subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.service_subscriptions.id"];
          created_at?: parameters["rowFilter.service_subscriptions.created_at"];
          updated_at?: parameters["rowFilter.service_subscriptions.updated_at"];
          service_name?: parameters["rowFilter.service_subscriptions.service_name"];
          billing_period?: parameters["rowFilter.service_subscriptions.billing_period"];
          price?: parameters["rowFilter.service_subscriptions.price"];
          subscription_plan?: parameters["rowFilter.service_subscriptions.subscription_plan"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.service_subscriptions.id"];
          created_at?: parameters["rowFilter.service_subscriptions.created_at"];
          updated_at?: parameters["rowFilter.service_subscriptions.updated_at"];
          service_name?: parameters["rowFilter.service_subscriptions.service_name"];
          billing_period?: parameters["rowFilter.service_subscriptions.billing_period"];
          price?: parameters["rowFilter.service_subscriptions.price"];
          subscription_plan?: parameters["rowFilter.service_subscriptions.subscription_plan"];
        };
        body: {
          /** service_subscriptions */
          service_subscriptions?: definitions["service_subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/service_subscriptions_categories": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.service_subscriptions_categories.id"];
          created_at?: parameters["rowFilter.service_subscriptions_categories.created_at"];
          name?: parameters["rowFilter.service_subscriptions_categories.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["service_subscriptions_categories"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** service_subscriptions_categories */
          service_subscriptions_categories?: definitions["service_subscriptions_categories"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.service_subscriptions_categories.id"];
          created_at?: parameters["rowFilter.service_subscriptions_categories.created_at"];
          name?: parameters["rowFilter.service_subscriptions_categories.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.service_subscriptions_categories.id"];
          created_at?: parameters["rowFilter.service_subscriptions_categories.created_at"];
          name?: parameters["rowFilter.service_subscriptions_categories.name"];
        };
        body: {
          /** service_subscriptions_categories */
          service_subscriptions_categories?: definitions["service_subscriptions_categories"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  service_subscriptions: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /** Format: character varying */
    service_name: string;
    /** Format: character varying */
    billing_period: string;
    /** Format: double precision */
    price: number;
    /** Format: character varying */
    subscription_plan?: string | null;
  };
  service_subscriptions_categories: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description service_subscriptions */
  "body.service_subscriptions": definitions["service_subscriptions"];
  /** Format: uuid */
  "rowFilter.service_subscriptions.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.service_subscriptions.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.service_subscriptions.updated_at": string;
  /** Format: character varying */
  "rowFilter.service_subscriptions.service_name": string;
  /** Format: character varying */
  "rowFilter.service_subscriptions.billing_period": string;
  /** Format: double precision */
  "rowFilter.service_subscriptions.price": string;
  /** Format: character varying */
  "rowFilter.service_subscriptions.subscription_plan": string;
  /** @description service_subscriptions_categories */
  "body.service_subscriptions_categories": definitions["service_subscriptions_categories"];
  /** Format: uuid */
  "rowFilter.service_subscriptions_categories.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.service_subscriptions_categories.created_at": string;
  /** Format: character varying */
  "rowFilter.service_subscriptions_categories.name": string;
}

export interface operations {}

export interface external {}
